{"version":3,"sources":["helpers/index.js","sortingAlgorithms/bubbleSort.js","sortingAlgorithms/heapSort.js","sortingAlgorithms/mergeSort.js","sortingAlgorithms/quickSort.js","SortingVisualizer/SortingVisualizer.js","App.js","index.js"],"names":["ANIMATION_SPEED","NUMBER_OF_ARRAY_BARS","MAX_HEIGHT","COLOR","arraysAreEqual","jsSortedArray","mySort","length","i","sleep","milliseconds","Promise","resolve","setTimeout","disableAllButtons","arg","buttons","document","querySelectorAll","disabled","disableGNA_btn","getElementById","disableStop_btn","bubbleSort","array","a","PRIMARY_COLOR","SECONDARY_COLOR","len","arrayBars","getElementsByClassName","j","toUpdateColor_barTwoIdx","toUpdateColor_barOneIdx","style","backgroundColor","Height_newHeight","height","toUpdateHeight_newHeight","window","screen","width","heapSort","buildMaxHeap","lastElement","swap","heapify","arr","Math","floor","heap","max","index","rightChild","leftChild","b","mergeSort","mergeAnimations","getMergeSortAnimations","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","newHeight","animations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","k","push","doMerge","quickSort","end","doQuickSort","start","partition","all","pivotValue","pivotIndex","SortingVisualizer","useState","setArray","sortMethod","setSortMethod","resetArray","min","random","sort","console","log","useEffect","className","onClick","selectAlgorithm","id","location","reload","map","value","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fd124ce9.chunk.js","sourcesContent":["// Constants\r\nexport const COLOR = { PRIMARY_COLOR: \"#40dfdf\", SECONDARY_COLOR: \"red\" };\r\nexport let ANIMATION_SPEED;\r\nexport let NUMBER_OF_ARRAY_BARS;\r\nexport let MAX_HEIGHT;\r\n\r\nif (window.screen.width > 600) {\r\n  ANIMATION_SPEED = 3;\r\n  NUMBER_OF_ARRAY_BARS = 150;\r\n  MAX_HEIGHT = 700;\r\n} else {\r\n  ANIMATION_SPEED = 15;\r\n  NUMBER_OF_ARRAY_BARS = 40;\r\n  MAX_HEIGHT = 550;\r\n}\r\n\r\n//HELPER FUNCTIONS\r\nexport function randomIntBetween(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function arraysAreEqual(jsSortedArray, mySort) {\r\n  if (jsSortedArray.length !== mySort.length) return false;\r\n\r\n  for (let i = 0; i < jsSortedArray.length; i++) {\r\n    if (jsSortedArray[i] !== mySort[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function sleep(milliseconds) {\r\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n}\r\n\r\n// Disable/Enable all buttons\r\nexport function disableAllButtons(arg) {\r\n  const buttons = document.querySelectorAll(\"button\");\r\n  for (let i = 0; i < buttons.length; i++) {\r\n    buttons[i].disabled = arg;\r\n  }\r\n}\r\n\r\n// Enable generate new array btn only so this btn can then enable all button and at the same time generate new array\r\nexport function disableGNA_btn(arg) {\r\n  const button = document.getElementById(\"GNA-btn\");\r\n  button.disabled = arg;\r\n}\r\n\r\n//Stop button\r\nexport function disableStop_btn(arg) {\r\n  const button = document.getElementById(\"stop-btn\");\r\n  button.disabled = arg;\r\n}\r\n","import {\r\n  COLOR,\r\n  ANIMATION_SPEED,\r\n  sleep,\r\n  disableGNA_btn,\r\n  disableStop_btn,\r\n} from \"../helpers\";\r\n\r\nexport async function bubbleSort(array) {\r\n  const { PRIMARY_COLOR, SECONDARY_COLOR } = COLOR;\r\n  let len = array.length;\r\n  if (len <= 1) return array;\r\n  const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    for (let j = 0; j < len - i - 1; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        let [toUpdateColor_barOneIdx, toUpdateColor_barTwoIdx] = [j, j + 1];\r\n\r\n        //Change color to show its selected\r\n        arrayBars[\r\n          toUpdateColor_barOneIdx\r\n        ].style.backgroundColor = SECONDARY_COLOR;\r\n        arrayBars[\r\n          toUpdateColor_barTwoIdx\r\n        ].style.backgroundColor = SECONDARY_COLOR;\r\n        await sleep(ANIMATION_SPEED);\r\n\r\n        //Update size\r\n        let [Height_barOneIdx, Height_newHeight] = [j + 1, array[j]];\r\n        arrayBars[Height_barOneIdx].style.height = `${Height_newHeight}px`;\r\n        await sleep(ANIMATION_SPEED);\r\n\r\n        //SWAP\r\n        [array[j], array[j + 1]] = [array[j + 1], array[j]];\r\n\r\n        //Update size\r\n        let [toUpdateHeight_barOneIdx, toUpdateHeight_newHeight] = [\r\n          j,\r\n          array[j],\r\n        ];\r\n        arrayBars[\r\n          toUpdateHeight_barOneIdx\r\n        ].style.height = `${toUpdateHeight_newHeight}px`;\r\n        await sleep(ANIMATION_SPEED);\r\n\r\n        //Revert color\r\n        arrayBars[\r\n          toUpdateColor_barOneIdx\r\n        ].style.backgroundColor = PRIMARY_COLOR;\r\n        arrayBars[\r\n          toUpdateColor_barTwoIdx\r\n        ].style.backgroundColor = PRIMARY_COLOR;\r\n        await sleep(ANIMATION_SPEED);\r\n      }\r\n    }\r\n  }\r\n\r\n  disableGNA_btn(false);\r\n  disableStop_btn(true);\r\n  // return array;\r\n}\r\n","import {\r\n  sleep,\r\n  ANIMATION_SPEED,\r\n  COLOR,\r\n  disableGNA_btn,\r\n  disableStop_btn,\r\n} from \"../helpers\";\r\nconst { PRIMARY_COLOR, SECONDARY_COLOR } = COLOR;\r\nconst arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\r\nexport async function heapSort(array) {\r\n  // Build max heap\r\n  await buildMaxHeap(array);\r\n\r\n  // Get the index of the last element\r\n  let lastElement = array.length - 1;\r\n\r\n  // Continue heap sorting until we have\r\n  // One element left\r\n  while (lastElement > 0) {\r\n    await swap(array, 0, lastElement);\r\n    await heapify(array, 0, lastElement);\r\n    lastElement -= 1;\r\n  }\r\n\r\n  disableGNA_btn(false);\r\n  disableStop_btn(true);\r\n  // return array;\r\n}\r\n\r\nasync function buildMaxHeap(arr) {\r\n  // Get index of the middle element\r\n  let i = Math.floor(arr.length / 2 - 1);\r\n\r\n  // Build a max heap out of\r\n  // All array elements passed in\r\n  while (i >= 0) {\r\n    await heapify(arr, i, arr.length);\r\n    i -= 1;\r\n  }\r\n}\r\n\r\nasync function heapify(heap, i, max) {\r\n  let index;\r\n  let leftChild;\r\n  let rightChild;\r\n\r\n  while (i < max) {\r\n    index = i;\r\n\r\n    // Get the left child index\r\n    // Using the known formula\r\n    leftChild = 2 * i + 1;\r\n\r\n    // Get the right child index\r\n    // Using the known formula\r\n    rightChild = leftChild + 1;\r\n\r\n    // If the left child is not last element\r\n    // And its value is bigger\r\n    if (leftChild < max && heap[leftChild] > heap[index]) {\r\n      index = leftChild;\r\n    }\r\n\r\n    // If the right child is not last element\r\n    // And its value is bigger\r\n    if (rightChild < max && heap[rightChild] > heap[index]) {\r\n      index = rightChild;\r\n    }\r\n\r\n    // If none of the above conditions is true\r\n    // Just return\r\n    if (index === i) {\r\n      return;\r\n    }\r\n\r\n    // Else swap elements\r\n    await swap(heap, i, index);\r\n\r\n    // Continue by using the swapped index\r\n    i = index;\r\n  }\r\n}\r\n\r\nasync function swap(arr, a, b) {\r\n  let [toUpdateColor_barOneIdx, toUpdateColor_barTwoIdx] = [a, b];\r\n\r\n  //Change color to show its selected\r\n  arrayBars[toUpdateColor_barOneIdx].style.backgroundColor = SECONDARY_COLOR;\r\n  arrayBars[toUpdateColor_barTwoIdx].style.backgroundColor = SECONDARY_COLOR;\r\n  await sleep(ANIMATION_SPEED);\r\n\r\n  //Update size\r\n  let [Height_barOneIdx, Height_newHeight] = [b, arr[a]];\r\n  arrayBars[Height_barOneIdx].style.height = `${Height_newHeight}px`;\r\n  await sleep(ANIMATION_SPEED);\r\n\r\n  // SWAP\r\n  [arr[a], arr[b]] = [arr[b], arr[a]];\r\n\r\n  //Update size\r\n  let [toUpdateHeight_barOneIdx, toUpdateHeight_newHeight] = [a, arr[b]];\r\n  arrayBars[\r\n    toUpdateHeight_barOneIdx\r\n  ].style.height = `${toUpdateHeight_newHeight}px`;\r\n  await sleep(ANIMATION_SPEED);\r\n\r\n  //Revert color\r\n  arrayBars[toUpdateColor_barOneIdx].style.backgroundColor = PRIMARY_COLOR;\r\n  arrayBars[toUpdateColor_barTwoIdx].style.backgroundColor = PRIMARY_COLOR;\r\n  await sleep(ANIMATION_SPEED);\r\n}\r\n","//Merge sort is implemented differently so it returns animations and not the sorted array\r\n\r\nimport {\r\n  COLOR,\r\n  ANIMATION_SPEED,\r\n  sleep,\r\n  disableGNA_btn,\r\n  disableStop_btn,\r\n} from \"../helpers\";\r\n\r\nexport async function mergeSort(array) {\r\n  const { PRIMARY_COLOR, SECONDARY_COLOR } = COLOR;\r\n  const mergeAnimations = getMergeSortAnimations(array);\r\n  for (let i = 0; i < mergeAnimations.length; i++) {\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n    const isColorChange = i % 3 !== 2;\r\n    if (isColorChange) {\r\n      const [barOneIdx, barTwoIdx] = mergeAnimations[i];\r\n      const barOneStyle = arrayBars[barOneIdx].style;\r\n      const barTwoStyle = arrayBars[barTwoIdx].style;\r\n      const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n      barOneStyle.backgroundColor = color;\r\n      barTwoStyle.backgroundColor = color;\r\n      await sleep(ANIMATION_SPEED);\r\n    } else {\r\n      const [barOneIdx, newHeight] = mergeAnimations[i];\r\n      const barOneStyle = arrayBars[barOneIdx].style;\r\n      barOneStyle.height = `${newHeight}px`;\r\n      await sleep(ANIMATION_SPEED);\r\n    }\r\n  }\r\n\r\n  disableGNA_btn(false);\r\n  disableStop_btn(true);\r\n}\r\n\r\nfunction getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    // Push to change their color.\r\n    animations.push([i, j]);\r\n\r\n    // Push to revert their color.\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      // Push to update height\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      // Updating mainArray\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      // Push to update height\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      // Updating mainArray\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i]);\r\n\r\n    animations.push([i, i]);\r\n\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j]);\r\n\r\n    animations.push([j, j]);\r\n\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n","import {\r\n  ANIMATION_SPEED,\r\n  COLOR,\r\n  sleep,\r\n  disableGNA_btn,\r\n  disableStop_btn,\r\n} from \"../helpers\";\r\n\r\nconst { PRIMARY_COLOR, SECONDARY_COLOR } = COLOR;\r\nconst arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\r\nexport async function quickSort(array) {\r\n  let start = 0;\r\n  let end = array.length - 1;\r\n  await doQuickSort(array, start, end);\r\n\r\n  disableGNA_btn(false);\r\n  disableStop_btn(true);\r\n  // return array;\r\n}\r\n\r\nasync function doQuickSort(array, start, end) {\r\n  if (start >= end) {\r\n    return;\r\n  }\r\n  let index = await partition(array, start, end);\r\n\r\n  await Promise.all([\r\n    doQuickSort(array, start, index - 1),\r\n    doQuickSort(array, index + 1, end),\r\n  ]);\r\n}\r\n\r\nasync function partition(array, start, end) {\r\n  let pivotValue = array[end];\r\n  let pivotIndex = start;\r\n\r\n  for (let i = start; i < end; i++) {\r\n    if (array[i] < pivotValue) {\r\n      await swap(array, i, pivotIndex);\r\n      pivotIndex++;\r\n    }\r\n  }\r\n  await swap(array, end, pivotIndex);\r\n  return pivotIndex;\r\n}\r\n\r\nasync function swap(array, a, b) {\r\n  let [toUpdateColor_barOneIdx, toUpdateColor_barTwoIdx] = [a, b];\r\n\r\n  //Change color to show its selected\r\n  arrayBars[toUpdateColor_barOneIdx].style.backgroundColor = SECONDARY_COLOR;\r\n  arrayBars[toUpdateColor_barTwoIdx].style.backgroundColor = SECONDARY_COLOR;\r\n  await sleep(ANIMATION_SPEED);\r\n\r\n  //Update size\r\n  let [Height_barOneIdx, Height_newHeight] = [b, array[a]];\r\n  arrayBars[Height_barOneIdx].style.height = `${Height_newHeight}px`;\r\n  await sleep(ANIMATION_SPEED);\r\n\r\n  // SWAP\r\n  [array[a], array[b]] = [array[b], array[a]];\r\n\r\n  //Update size\r\n  let [toUpdateHeight_barOneIdx, toUpdateHeight_newHeight] = [a, array[b]];\r\n  arrayBars[\r\n    toUpdateHeight_barOneIdx\r\n  ].style.height = `${toUpdateHeight_newHeight}px`;\r\n  await sleep(ANIMATION_SPEED);\r\n\r\n  //Revert color\r\n  arrayBars[toUpdateColor_barOneIdx].style.backgroundColor = PRIMARY_COLOR;\r\n  arrayBars[toUpdateColor_barTwoIdx].style.backgroundColor = PRIMARY_COLOR;\r\n  await sleep(ANIMATION_SPEED);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/SortingVisualizer.css\";\r\nimport {\r\n  mergeSort,\r\n  bubbleSort,\r\n  quickSort,\r\n  heapSort,\r\n} from \"../sortingAlgorithms\";\r\n//CONSTANTS and some helper functions\r\nimport {\r\n  NUMBER_OF_ARRAY_BARS,\r\n  randomIntBetween,\r\n  arraysAreEqual,\r\n  disableAllButtons,\r\n  disableStop_btn,\r\n  MAX_HEIGHT,\r\n} from \"../helpers\";\r\n\r\nexport default function SortingVisualizer() {\r\n  const [array, setArray] = useState([]);\r\n  const [sortMethod, setSortMethod] = useState(\"Select a sorting algorithm\");\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n  }, []);\r\n\r\n  function resetArray() {\r\n    const array = [];\r\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n      array.push(randomIntBetween(10, MAX_HEIGHT));\r\n    }\r\n    setArray(array);\r\n  }\r\n\r\n  async function selectAlgorithm() {\r\n    // INBUILT JS SORT USED FOR COMPARING\r\n    const jsSortedArray = array.slice().sort((a, b) => a - b);\r\n\r\n    if (\r\n      arraysAreEqual(jsSortedArray, array) === false &&\r\n      sortMethod !== \"Select a sorting algorithm\"\r\n    ) {\r\n      disableAllButtons(true);\r\n      disableStop_btn(false);\r\n      switch (sortMethod) {\r\n        case \"BUBBLE SORT\":\r\n          bubbleSort(array);\r\n          break;\r\n\r\n        case \"HEAP SORT\":\r\n          heapSort(array);\r\n          break;\r\n\r\n        case \"MERGE SORT\":\r\n          mergeSort(array);\r\n          break;\r\n\r\n        case \"QUICK SORT\":\r\n          quickSort(array);\r\n          break;\r\n\r\n        default:\r\n          console.log(sortMethod);\r\n          break;\r\n      }\r\n    } else if (sortMethod === \"Select a sorting algorithm\") {\r\n      console.log(\"Select a sorting algorithm\");\r\n    } else {\r\n      console.log(\"Already Sorted, Try shuffling\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <h1>Sorting Visualizer</h1>\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            selectAlgorithm();\r\n          }}\r\n        >\r\n          Visualize\r\n        </button>\r\n        <button\r\n          id=\"GNA-btn\"\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            resetArray();\r\n            disableAllButtons(false);\r\n          }}\r\n        >\r\n          {/* Generate New Array */}\r\n          Shuffle\r\n        </button>\r\n        <button\r\n          id=\"stop-btn\"\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            window.location.reload();\r\n          }}\r\n        >\r\n          Stop\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"sort-type\">\r\n        <button className=\"btn\" onClick={() => setSortMethod(\"BUBBLE SORT\")}>\r\n          bubble sort\r\n        </button>\r\n        <button className=\"btn\" onClick={() => setSortMethod(\"HEAP SORT\")}>\r\n          heap sort\r\n        </button>\r\n        <button className=\"btn\" onClick={() => setSortMethod(\"MERGE SORT\")}>\r\n          merg sort\r\n        </button>\r\n        <button className=\"btn\" onClick={() => setSortMethod(\"QUICK SORT\")}>\r\n          quick sort\r\n        </button>\r\n      </div>\r\n      <p className=\"sortName\">{sortMethod}</p>\r\n\r\n      <div className=\"array-holder\" style={{ height: `${MAX_HEIGHT + 35}px` }}>\r\n        {array.map((value, id) => (\r\n          <div\r\n            key={id}\r\n            className=\"array-bar\"\r\n            style={{ height: `${value}px`, width: `10px` }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import \"./App.css\";\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}